{"version":3,"sources":["TaskStore.ts"],"names":[],"mappings":"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","file":"TaskStore.js","sourcesContent":["import {create} from \"zustand\";\r\nimport  Task  from \"../models/TaskModel\";\r\n\r\nconst isServer = typeof window === \"undefined\";\r\n\r\nconst getSavedTasks = ():typeof Task[] => {\r\n  if (isServer) {\r\n    return [];\r\n  }\r\n\r\n  const tasksJSON = localStorage.getItem(\"tasks\");\r\n  return tasksJSON ? JSON.parse(tasksJSON) : [];\r\n};\r\n\r\nconst saveTasks = (tasks:typeof Task[]) => {\r\n  if (!isServer) {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }\r\n};\r\n\r\ninterface TaskStoreState {\r\n  tasks:typeof Task[];\r\n  addTask: (task:typeof Task) => void;\r\n  deleteTask: (taskId: string) => void;\r\n  updateTaskTitle: (taskId: string, title: string) => void;\r\n  updateTaskDescription: (taskId: string, description: string) => void;\r\n  updateTaskStatus: (taskId: string, status: string) => void;\r\n  updateTask: (taskId: string, updatedTask:typeof Task) => void;\r\n}\r\n\r\nexport const useTaskStore = create<TaskStoreState>((set) => ({\r\n  tasks: getSavedTasks(),\r\n  addTask: (task) => {\r\n    set((state) => {\r\n      const updatedTasks = [...state.tasks, task];\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n  deleteTask: (taskId) => {\r\n    set((state) => {\r\n      const updatedTasks = state.tasks.filter((task) => task.id !== taskId);\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n  updateTaskTitle: (taskId, title) => {\r\n    set((state) => {\r\n      const updatedTasks = state.tasks.map((task) =>\r\n        task.id === taskId ? { ...task, title } : task\r\n      );\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n  updateTaskDescription: (taskId, description) => {\r\n    set((state) => {\r\n      const updatedTasks = state.tasks.map((task) =>\r\n        task.id === taskId ? { ...task, description } : task\r\n      );\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n  updateTaskStatus: (taskId, status) => {\r\n    set((state) => {\r\n      const updatedTasks = state.tasks.map((task) =>\r\n        task.id === taskId ? { ...task, status } : task\r\n      );\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n  updateTask: (taskId, updatedTask) => {\r\n    set((state) => {\r\n      const updatedTasks = state.tasks.map((task) =>\r\n        task.id === taskId ? { ...updatedTask } : task\r\n      );\r\n      saveTasks(updatedTasks);\r\n      return { tasks: updatedTasks };\r\n    });\r\n  },\r\n}));\r\n\r\n\r\n"]}