{"version":3,"sources":["TaskEdit.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,+BAAiC;AASjC,IAAM,YAAY,GAAG,UAAC,EAA6C;QAA3C,cAAI,EAAE,kBAAM,EAAE,sBAAQ;IACpC,IAAA,iCAAwC,EAAvC,aAAK,EAAE,gBAAgC,CAAC;IACzC,IAAA,uCAA0D,EAAzD,mBAAW,EAAE,sBAA4C,CAAC;IAEjE,IAAM,YAAY,GAAG,UAAC,CAAkB;QACpC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAM,WAAW,yBACV,IAAI,KACP,KAAK,OAAA;YACL,WAAW,aAAA,GACd,CAAC;QACF,MAAM,CAAC,WAAW,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO,CACH,8BAAM,QAAQ,EAAE,YAAY;QACxB,6CAAmB;QACnB,+BAAO,OAAO,EAAC,OAAO,aAAe;QACrC,+BACI,IAAI,EAAC,MAAM,EACX,EAAE,EAAC,OAAO,EACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAxB,CAAwB,GAC3C;QACF,+BAAO,OAAO,EAAC,aAAa,mBAAqB;QACjD,kCACI,EAAE,EAAC,aAAa,EAChB,KAAK,EAAE,WAAW,EAClB,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA9B,CAA8B,GACjD;QACF,gCAAQ,IAAI,EAAC,QAAQ,WAAc;QACnC,gCAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,QAAQ,aAE9B,CACN,CACV,CAAC;AACN,CAAC,CAAC;AAEF,qBAAe,YAAY,CAAC","file":"TaskEdit.js","sourcesContent":["import { useState } from \"react\";\r\nimport  Task  from \"../models/TaskModel\";\r\n\r\ninterface TaskEditFormProps {\r\n    task:typeof Task;\r\n    onSave: (updatedTask:typeof Task) => void;\r\n    onCancel: () => void;\r\n}\r\n\r\nconst TaskEditForm = ({ task, onSave, onCancel }: TaskEditFormProps) => {\r\n    const [title, setTitle] = useState(task.title);\r\n    const [description, setDescription] = useState(task.description);\r\n\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const updatedTask:typeof Task = {\r\n            ...task,\r\n            title,\r\n            description,\r\n        };\r\n        onSave(updatedTask);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h3>Edit Task:</h3>\r\n            <label htmlFor=\"title\">Title:</label>\r\n            <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"description\">Description:</label>\r\n            <textarea\r\n                id=\"description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n            />\r\n            <button type=\"submit\">Save</button>\r\n            <button type=\"button\" onClick={onCancel}>\r\n                Cancel\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default TaskEditForm;\r\n"]}