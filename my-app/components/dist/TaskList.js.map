{"version":3,"sources":["TaskList.tsx"],"names":[],"mappings":";;AAAA,+BAAiC;AACjC,mDAA2C;AAC3C,iDAAmD;AACnD,uCAAkC;AAClC,+CAA0C;AAC1C,wCAAmC;AAEnC,IAAM,QAAQ,GAAG,0BAAQ,CAAC;IACxB,IAAM,SAAS,GAAG,wBAAY,EAAE,CAAC;IAC3B,IAAA,2BAAmE,EAAlE,sBAAc,EAAE,yBAAkD,CAAC;IAE1E,IAAM,eAAe,GAAG,UAAC,MAAc;QACrC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,IAAM,gBAAgB,GAAG;QACvB,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,IAAM,cAAc,GAAG,UAAC,MAAc,EAAE,KAAa,EAAE,WAAmB;QACxE,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;QACjD,iBAAiB,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEF,IAAM,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK,OAAO,EAAvB,CAAuB,CAAC,CAAC,MAAM,CAAC;IACnF,IAAM,aAAa,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK,UAAU,EAA1B,CAA0B,CAAC,CAAC,MAAM,CAAC;IAC1F,IAAM,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAxB,CAAwB,CAAC,CAAC,MAAM,CAAC;IAEtF,OAAO,CACL;QACE,yCAAe;QACf;;YAAmB,SAAS,CAAC,KAAK,CAAC,MAAM,CAAO;QAChD;;YAAkB,SAAS,CAAO;QAClC;;YAAsB,aAAa,CAAO;QAC1C;;YAAoB,WAAW,CAAO;QACrC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,CAC7B,6BAAK,GAAG,EAAE,IAAI,CAAC,EAAE,IACd,cAAc,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAC5B,oBAAC,yBAAY,IACX,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,UAAC,KAAK,EAAE,WAAW,IAAK,OAAA,cAAc,CAAC,IAAI,CAAC,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,EAA3C,CAA2C,EAC3E,QAAQ,EAAE,gBAAgB,GAC1B,CACH,CAAC,CAAC,CAAC,CACF,oBAAC,qBAAQ,IACP,IAAI,EAAE,IAAI,EACV,WAAW,EAAE,cAAM,OAAA,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAxB,CAAwB,EAC3C,aAAa,EAAE,cAAM,OAAA,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,EAA7B,CAA6B,GAClD,CACH,CACG,CACP,EAhB8B,CAgB9B,CAAC,CACE,CACP,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,qBAAe,oBAAO,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAzB,CAAyB,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC","file":"TaskList.js","sourcesContent":["import { useState } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useTaskStore } from \"../stores/TaskStore\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport TaskEditForm from \"./TaskEditForm\";\r\nimport dynamic from \"next/dynamic\";\r\n\r\nconst TaskList = observer(() => {\r\n  const taskStore = useTaskStore();\r\n  const [editableTaskId, setEditableTaskId] = useState<string | null>(null);\r\n\r\n  const handleEditClick = (taskId: string) => {\r\n    setEditableTaskId(taskId);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditableTaskId(null);\r\n  };\r\n\r\n  const handleSaveEdit = (taskId: string, title: string, description: string) => {\r\n    taskStore.updateTask(taskId, title, description);\r\n    setEditableTaskId(null);\r\n  };\r\n\r\n  const todoTasks = taskStore.tasks.filter((task) => task.status === \"To Do\").length;\r\n  const progressTasks = taskStore.tasks.filter((task) => task.status === \"Progress\").length;\r\n  const closedTasks = taskStore.tasks.filter((task) => task.status === \"Closed\").length;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Tasks:</h2>\r\n      <div>Total Tasks: {taskStore.tasks.length}</div>\r\n      <div>Todo Tasks: {todoTasks}</div>\r\n      <div>Progress Tasks: {progressTasks}</div>\r\n      <div>Closed Tasks: {closedTasks}</div>\r\n      {taskStore.tasks.map((task) => (\r\n        <div key={task.id}>\r\n          {editableTaskId === task.id ? (\r\n            <TaskEditForm\r\n              task={task}\r\n              onSave={(title, description) => handleSaveEdit(task.id, title, description)}\r\n              onCancel={handleCancelEdit}\r\n            />\r\n          ) : (\r\n            <TaskItem\r\n              task={task}\r\n              onEditClick={() => handleEditClick(task.id)}\r\n              onDeleteClick={() => taskStore.deleteTask(task.id)}\r\n            />\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default dynamic(() => Promise.resolve(TaskList), { ssr: false });\r\n"]}