{"version":3,"sources":["TaskEditForm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,+BAAiC;AASjC,IAAM,YAAY,GAAG,UAAC,EAA6C;QAA3C,cAAI,EAAE,kBAAM,EAAE,sBAAQ;IACtC,IAAA,iCAAwC,EAAvC,aAAK,EAAE,gBAAgC,CAAC;IACzC,IAAA,uCAA0D,EAAzD,mBAAW,EAAE,sBAA4C,CAAC;IAC3D,IAAA,kCAA2C,EAA1C,cAAM,EAAE,iBAAkC,CAAC;IAElD,IAAM,YAAY,GAAG,UAAC,CAAkB;QACtC,CAAC,CAAC,cAAc,EAAE,CAAC;QACnB,IAAM,WAAW,yBACZ,IAAI,KACP,KAAK,OAAA;YACL,WAAW,aAAA;YACX,MAAM,QAAA,GACP,CAAC;QACF,MAAM,CAAC,WAAW,CAAC,CAAC;IACtB,CAAC,CAAC;IAEF,IAAM,kBAAkB,GAAG,UAAC,CAAuC;QACjE,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC,CAAC;IAEF,OAAO,CACL,8BAAM,QAAQ,EAAE,YAAY;QAC1B,6CAAmB;QACnB,+BAAO,OAAO,EAAC,OAAO,aAAe;QACrC,+BACE,IAAI,EAAC,MAAM,EACX,EAAE,EAAC,OAAO,EACV,KAAK,EAAE,KAAK,EACZ,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAxB,CAAwB,GACzC;QACF,+BAAO,OAAO,EAAC,aAAa,mBAAqB;QACjD,kCACE,EAAE,EAAC,aAAa,EAChB,KAAK,EAAE,WAAW,EAClB,QAAQ,EAAE,UAAC,CAAC,IAAK,OAAA,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA9B,CAA8B,GAC/C;QACF,+BAAO,OAAO,EAAC,QAAQ,cAAgB;QACvC,gCAAQ,EAAE,EAAC,QAAQ,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB;YAC7D,gCAAQ,KAAK,EAAC,MAAM,WAAc;YAClC,gCAAQ,KAAK,EAAC,UAAU,eAAkB;YAC1C,gCAAQ,KAAK,EAAC,QAAQ,aAAgB,CAC/B;QACT,gCAAQ,IAAI,EAAC,QAAQ,WAAc;QACnC,gCAAQ,IAAI,EAAC,QAAQ,EAAC,OAAO,EAAE,QAAQ,aAE9B,CACJ,CACR,CAAC;AACJ,CAAC,CAAC;AAEF,qBAAe,YAAY,CAAC","file":"TaskEditForm.js","sourcesContent":["import { useState } from \"react\";\r\nimport Task from \"../models/TaskModel\";\r\n\r\ninterface TaskEditFormProps {\r\n  task: Task;\r\n  onSave: (updatedTask: Task) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst TaskEditForm = ({ task, onSave, onCancel }: TaskEditFormProps) => {\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  const [status, setStatus] = useState(task.status);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const updatedTask: Task = {\r\n      ...task,\r\n      title,\r\n      description,\r\n      status,\r\n    };\r\n    onSave(updatedTask);\r\n  };\r\n\r\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Edit Task:</h3>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <textarea\r\n        id=\"description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <label htmlFor=\"status\">Status:</label>\r\n      <select id=\"status\" value={status} onChange={handleStatusChange}>\r\n        <option value=\"Todo\">Todo</option>\r\n        <option value=\"Progress\">Progress</option>\r\n        <option value=\"Closed\">Closed</option>\r\n      </select>\r\n      <button type=\"submit\">Save</button>\r\n      <button type=\"button\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskEditForm;\r\n"]}