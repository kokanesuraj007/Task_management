{"version":3,"sources":["TaskForm.tsx"],"names":["react_1","require","TaskStore_1","dynamic_1","TaskForm","_a","useState","title","setTitle","_b","description","setDescription","taskStore","useTaskStore","React","createElement","onSubmit","e","preventDefault","task","id","Date","now","toString","status","addTask","htmlFor","type","value","onChange","target","exports","Promise","resolve","ssr"],"mappings":"mCAAA,IAAAA,QAAAC,QAAA,SACAC,YAAAD,QAAA,uBAEAE,UAAAF,QAAA,gBAEMG,SAAW,WACT,IAAAC,EAAAL,QAAAM,SAAA,IAACC,EAAAF,EAAA,GAAOG,EAAAH,EAAA,GACRI,EAAAT,QAAAM,SAAA,IAACI,EAAAD,EAAA,GAAaE,EAAAF,EAAA,GACdG,EAAYV,YAAAW,eAelB,OACEC,MAAAC,cAAA,OAAA,CAAMC,SAda,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAmB,CACvBC,GAAIC,KAAKC,MAAMC,WACfhB,MAAKA,EACLG,YAAWA,EACXc,OAAQ,SAEVZ,EAAUa,QAAQN,GAClBX,EAAS,IACTG,EAAe,MAKbG,MAAAC,cAAA,KAAA,KAAA,aACAD,MAAAC,cAAA,QAAA,CAAOW,QAAQ,SAAO,UACtBZ,MAAAC,cAAA,QAAA,CACEY,KAAK,OACLP,GAAG,QACHQ,MAAOrB,EACPsB,SAAU,SAACZ,GAAM,OAAAT,EAASS,EAAEa,OAAOF,UAErCd,MAAAC,cAAA,QAAA,CAAOW,QAAQ,eAAa,gBAC5BZ,MAAAC,cAAA,WAAA,CACEK,GAAG,cACHQ,MAAOlB,EACPmB,SAAU,SAACZ,GAAM,OAAAN,EAAeM,EAAEa,OAAOF,UAE3Cd,MAAAC,cAAA,SAAA,CAAQY,KAAK,UAAQ,cAK3BI,QAAA,QAAe5B,UAAA,QAAS,WAAM,OAAA6B,QAAQC,QAAQ7B,WAAW,CAAC8B,KAAK","file":"TaskForm.min.js","sourcesContent":["import { useState } from \"react\";\r\nimport { useTaskStore } from \"../stores/TaskStore\";\r\nimport  Task  from \"../models/TaskModel\";\r\nimport dynamic from \"next/dynamic\";\r\n\r\nconst TaskForm = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const taskStore = useTaskStore();\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const task:typeof Task = {\r\n      id: Date.now().toString(),\r\n      title,\r\n      description,\r\n      status: \"To Do\",\r\n    };\r\n    taskStore.addTask(task);\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add Task:</h2>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <textarea\r\n        id=\"description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default dynamic (() => Promise.resolve(TaskForm), {ssr: false});\r\n"]}