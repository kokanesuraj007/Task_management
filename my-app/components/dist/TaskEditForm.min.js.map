{"version":3,"sources":["TaskEditForm.tsx"],"names":["react_1","require","TaskEditForm","_a","task","onSave","onCancel","_b","useState","title","setTitle","_c","description","setDescription","_d","status","setStatus","React","createElement","onSubmit","e","preventDefault","updatedTask","__assign","htmlFor","type","id","value","onChange","target","onClick","exports"],"mappings":"yRAAA,IAAAA,QAAAC,QAAA,SASMC,aAAe,SAACC,OAAEC,EAAAD,EAAAC,KAAMC,EAAAF,EAAAE,OAAQC,EAAAH,EAAAG,SAC9BC,EAAAP,QAAAQ,SAAAJ,EAAAK,OAACA,EAAAF,EAAA,GAAOG,EAAAH,EAAA,GACRI,EAAAX,QAAAQ,SAAAJ,EAAAQ,aAACA,EAAAD,EAAA,GAAaE,EAAAF,EAAA,GACdG,EAAAd,QAAAQ,SAAAJ,EAAAW,QAACA,EAAAD,EAAA,GAAQE,EAAAF,EAAA,GAiBf,OACEG,MAAAC,cAAA,OAAA,CAAMC,SAhBa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAWC,SAAAA,SAAA,GACZnB,GAAI,CACPK,MAAKA,EACLG,YAAWA,EACXG,OAAMA,IAERV,EAAOiB,KASLL,MAAAC,cAAA,KAAA,KAAA,cACAD,MAAAC,cAAA,QAAA,CAAOM,QAAQ,SAAO,UACtBP,MAAAC,cAAA,QAAA,CACEO,KAAK,OACLC,GAAG,QACHC,MAAOlB,EACPmB,SAAU,SAACR,GAAM,OAAAV,EAASU,EAAES,OAAOF,UAErCV,MAAAC,cAAA,QAAA,CAAOM,QAAQ,eAAa,gBAC5BP,MAAAC,cAAA,WAAA,CACEQ,GAAG,cACHC,MAAOf,EACPgB,SAAU,SAACR,GAAM,OAAAP,EAAeO,EAAES,OAAOF,UAE3CV,MAAAC,cAAA,QAAA,CAAOM,QAAQ,UAAQ,WACvBP,MAAAC,cAAA,SAAA,CAAQQ,GAAG,SAASC,MAAOZ,EAAQa,SArBZ,SAACR,GAC1BJ,EAAUI,EAAES,OAAOF,SAqBfV,MAAAC,cAAA,SAAA,CAAQS,MAAM,QAAM,QACpBV,MAAAC,cAAA,SAAA,CAAQS,MAAM,YAAU,YACxBV,MAAAC,cAAA,SAAA,CAAQS,MAAM,UAAQ,WAExBV,MAAAC,cAAA,SAAA,CAAQO,KAAK,UAAQ,QACrBR,MAAAC,cAAA,SAAA,CAAQO,KAAK,SAASK,QAASxB,GAAQ,YAO7CyB,QAAA,QAAe7B","file":"TaskEditForm.min.js","sourcesContent":["import { useState } from \"react\";\r\nimport Task from \"../models/TaskModel\";\r\n\r\ninterface TaskEditFormProps {\r\n  task: Task;\r\n  onSave: (updatedTask: Task) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst TaskEditForm = ({ task, onSave, onCancel }: TaskEditFormProps) => {\r\n  const [title, setTitle] = useState(task.title);\r\n  const [description, setDescription] = useState(task.description);\r\n  const [status, setStatus] = useState(task.status);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const updatedTask: Task = {\r\n      ...task,\r\n      title,\r\n      description,\r\n      status,\r\n    };\r\n    onSave(updatedTask);\r\n  };\r\n\r\n  const handleStatusChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Edit Task:</h3>\r\n      <label htmlFor=\"title\">Title:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <label htmlFor=\"description\">Description:</label>\r\n      <textarea\r\n        id=\"description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <label htmlFor=\"status\">Status:</label>\r\n      <select id=\"status\" value={status} onChange={handleStatusChange}>\r\n        <option value=\"Todo\">Todo</option>\r\n        <option value=\"Progress\">Progress</option>\r\n        <option value=\"Closed\">Closed</option>\r\n      </select>\r\n      <button type=\"submit\">Save</button>\r\n      <button type=\"button\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskEditForm;\r\n"]}